class Solution {
    func minimumTotal(_ triangle: [[Int]]) -> Int {
        var answer = 0
        
        var dp: [[Int]] = Array(repeating: Array(repeating:0 ,count: triangle.count),                count : triangle.count)
        
        dp[0][0] = triangle[0][0]
        if triangle.count == 1 {
            return dp[0][0]
        }
        
        dp[1][0] = dp[0][0] + triangle[1][0]
        dp[1][1] = dp[0][0] + triangle[1][1]
        
        if triangle.count == 2 {
            return min(dp[1][0],dp[1][1])
        }
        
        for i in 2..<triangle.count {
            for j in 0..<triangle[i].count {
                if j == 0 {
                    dp[i][j] = triangle[i][j] + dp[i - 1][0]
                }
                else if j == triangle[i].count - 1 {
                    dp[i][j] = triangle[i][j] + dp[i - 1][j - 1]
                }
                else {
                    
                    dp[i][j] = triangle[i][j] + min(dp[i - 1][j - 1],dp[i - 1][j])
                }
            }
        }
        
        
        
        print(dp)
        return dp[triangle.count - 1].min()!
    }
}
