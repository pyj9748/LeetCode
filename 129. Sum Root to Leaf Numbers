/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public var val: Int
 *     public var left: TreeNode?
 *     public var right: TreeNode?
 *     public init() { self.val = 0; self.left = nil; self.right = nil; }
 *     public init(_ val: Int) { self.val = val; self.left = nil; self.right = nil; }
 *     public init(_ val: Int, _ left: TreeNode?, _ right: TreeNode?) {
 *         self.val = val
 *         self.left = left
 *         self.right = right
 *     }
 * }
 */
class Solution {
    var ans = 0
    func sumNumbers(_ root: TreeNode?) -> Int {
        recur(root, "")
        return ans
    }
    func recur(_ cur: TreeNode?, _ path: String) {
        if cur?.left == nil && cur?.right == nil {
            ans += Int(path + String(cur!.val))!
            print(path)
            return
        }
        if let le = cur?.left {
            recur(le, path + String(cur!.val))
        } 
        if let ri = cur?.right {
            recur(ri, path + String(cur!.val))
        } 
    }
}
