/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public var val: Int
 *     public var left: TreeNode?
 *     public var right: TreeNode?
 *     public init() { self.val = 0; self.left = nil; self.right = nil; }
 *     public init(_ val: Int) { self.val = val; self.left = nil; self.right = nil; }
 *     public init(_ val: Int, _ left: TreeNode?, _ right: TreeNode?) {
 *         self.val = val
 *         self.left = left
 *         self.right = right
 *     }
 * }
 */
class Solution {
    var ans: [Int] = []
    func preorderTraversal(_ root: TreeNode?) -> [Int] {
        if root == nil {
            return []
        }

        dfs(root)
        return ans
    }

    func dfs(_ node: TreeNode?) {
        guard let n = node else { return }
        ans.append(n.val)
        if let l = n.left {
            dfs(l)
        }
        if let r = n.right {
            dfs(r)
        }
    }
}
