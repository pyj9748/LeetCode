/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public var val: Int
 *     public var left: TreeNode?
 *     public var right: TreeNode?
 *     public init() { self.val = 0; self.left = nil; self.right = nil; }
 *     public init(_ val: Int) { self.val = val; self.left = nil; self.right = nil; }
 *     public init(_ val: Int, _ left: TreeNode?, _ right: TreeNode?) {
 *         self.val = val
 *         self.left = left
 *         self.right = right
 *     }
 * }
 */
class Solution {
    func countNodes(_ root: TreeNode?) -> Int {
        if root == nil {
            return 0
        }
        var node: TreeNode? = root
        if node == nil {
            return 0
        }
        var n = 0
        var children: [TreeNode?] = [ node ]
        while children.count > 0 {
            let cur = children.popLast()!
                n += 1
            if cur!.left != nil {
                children.append(cur!.left)
            }
            
            if cur!.right != nil {
                children.append(cur!.right)
            } 
            
             
        }
        return n
    }
}
