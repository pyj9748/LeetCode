/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public var val: Int
 *     public var next: ListNode?
 *     public init() { self.val = 0; self.next = nil; }
 *     public init(_ val: Int) { self.val = val; self.next = nil; }
 *     public init(_ val: Int, _ next: ListNode?) { self.val = val; self.next = next; }
 * }
 */
class Solution {
    func isPalindrome(_ head: ListNode?) -> Bool {
        var arr: [Int] = []
        var node = head
        
        while node!.next != nil {
            arr.append(node!.val)
            node = node!.next
        }
        arr.append(node!.val)
        
        var le = 0
        var ri = arr.count - 1
        while le < ri {
            if arr[le] == arr[ri] {
                le += 1
                ri -= 1
            }
            else {
                return false 
            }
        }
        return true
    }
}
