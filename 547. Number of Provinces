class Solution {
    func findCircleNum(_ isConnected: [[Int]]) -> Int {
       
        var ans = 0
        let n = isConnected.count
        var table = isConnected
        var dict = [ Int : Set<Int>]()
        for i in 0..<n {
            for j in i..<n {
                if table[i][j] == 0 { continue }
                if var temp = dict[i] {
                    temp.insert(j)
                    dict[i] = temp
                } else {
                    var a = Set<Int>()
                    a.insert(j)
                    dict[i] = a
                }
                if var temp2 = dict[j] {
                    temp2.insert(i)
                    dict[j] = temp2
                } else {
                    var a = Set<Int>()
                    a.insert(i)
                    dict[j] = a
                }
            }
        }


        for i in 0..<n {
            for j in i..<n {
                if table[i][j] == 1 {
                    ans += 1
                    var q = [[i,j]]
                    while !q.isEmpty {
                        let top = q.removeLast()
                        table[top[0]][top[1]] = 0
                        table[top[1]][top[0]] = 0
                        let node = top[1]
                        guard var nextNodes = dict[node] else { continue } 
                        for nextNode in nextNodes {
                            if table[node][nextNode] == 1 {
                                q.append([node, nextNode])
                            }
                        }
                        dict[node] = Set<Int>()
                    }
                }

            }
        }
        return ans
    }
}
