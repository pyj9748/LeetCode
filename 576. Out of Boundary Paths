class Solution {
    func findPaths(_ m: Int, _ n: Int, _ maxMove: Int, _ startRow: Int, _ startColumn: Int) -> Int {
        if maxMove == 0 { return  0 }
        let mod = 1000000007
        var dp = Array(repeating: Array(repeating: Array(repeating: 0, count: n), count: m), count: maxMove+1)

        for move in 1...maxMove {
            for row in 0..<m {
                for col in 0..<n {
                    let a = row-1 >= 0 ? dp[move-1][row-1][col] : 1
                    let b = col-1 >= 0 ? dp[move-1][row][col-1] : 1
                    let c = row+1 < m ? dp[move-1][row+1][col] : 1
                    let d = col+1 < n ? dp[move-1][row][col+1] : 1

                    dp[move][row][col] = (a + b + c + d) % mod
                }
            }
        }
        return dp[maxMove][startRow][startColumn]
    }
}
