class Solution {
    func floodFill(_ image: [[Int]], _ sr: Int, _ sc: Int, _ color: Int) -> [[Int]] {
        var queue: [[Int]] = [[sr,sc]]
        
        var g = image
        var pre = g[sr][sc]
        if pre == color {
            return image
        }
        while !queue.isEmpty {
            let top = queue.removeFirst()
            g[top[0]][top[1]] = color 
            // 상 우 하 좌
            if top[0] > 0 {
                if g[top[0] - 1][top[1]] == pre {
                    queue.append([top[0] - 1, top[1]])
                }                
            }
            if top[1] < image[0].count - 1 {
                if g[top[0]][top[1] + 1] == pre {
                    queue.append([top[0], top[1] + 1])
                } 
            }
            if top[0] < image.count - 1 {
                if g[top[0] + 1][top[1]] == pre {
                    queue.append([top[0] + 1, top[1]])
                } 
                
                
            }
            if top[1] > 0 {
                if g[top[0]][top[1] - 1] == pre {
                    queue.append([top[0], top[1] - 1])
                }
            }
        }
        return g
    }
}
