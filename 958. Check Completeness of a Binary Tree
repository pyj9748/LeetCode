/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public var val: Int
 *     public var left: TreeNode?
 *     public var right: TreeNode?
 *     public init() { self.val = 0; self.left = nil; self.right = nil; }
 *     public init(_ val: Int) { self.val = val; self.left = nil; self.right = nil; }
 *     public init(_ val: Int, _ left: TreeNode?, _ right: TreeNode?) {
 *         self.val = val
 *         self.left = left
 *         self.right = right
 *     }
 * }
 */
class Solution {
    func isCompleteTree(_ root: TreeNode?) -> Bool {
        //
        var que: [TreeNode?] = [ root ]
        while !que.isEmpty {
            let node = que.removeFirst()
            if node == nil {
                break
            }
            que.append(node?.left)
            que.append(node?.right)
        }
        for node in que {
            if node != nil {
                return false
            }
        }
        return true
    }
}
